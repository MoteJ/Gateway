buildscript {
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:2.1.9.RELEASE"
    }
}

plugins {
    id 'org.springframework.boot' version '2.1.9.RELEASE'
    id 'net.ltgt.apt' version '0.21'
    id 'java'
}

//apply from: "$rootDir/gradle/scripts/idea.gradle

group 'mote'
version '1.0-SNAPSHOT'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
    maven {url "http://maven.aliyun.com/nexus/content/groups/public/"}
    maven {url "https://mvnrepository.com/"}
    mavenCentral()
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'idea'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
//    all {
//        exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
//    }
}

compileJava {
    file('/src/main/generated').mkdirs()
    options.compilerArgs << '-processor' << 'com.querydsl.apt.jpa.JPAAnnotationProcessor' << '-s' << file('src/main/generated').absolutePath
}

compileTestJava{
    file('/src/test/generated').mkdirs()
    options.compilerArgs << '-processor' << 'com.querydsl.apt.jpa.JPAAnnotationProcessor' << '-s' << file('src/test/generated').absolutePath
}

clean{
    delete '/src/main/generated'
    delete '/src/test/generated'
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    //options.compilerArgs << "Xlint:unchecked"
    //options.compilerArgs << "Xlint:deprecation"
}

ext {
    guavaVersion = "27.1-jre"
    springfoxVersion = "2.9.2"
    lombokVersion = "1.18.6"
    queryDslVersion = '4.2.1'
    nettyVersion = "4.1.39.Final"
    caffeineVersion = "2.6.0"
    druidVersion = "1.1.10"
    shardingJdbcVersion = "4.0.0"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:Finchley.RELEASE"
    }
}

dependencies {
    implementation("com.google.guava:guava:$guavaVersion")
    implementation("org.springframework.boot:spring-boot-starter")
    implementation("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
    implementation("org.springframework.boot:spring-boot-starter-undertow")
    implementation("org.springframework.boot:spring-boot-starter-actuator")
    implementation("org.springframework.cloud:spring-cloud-starter-config")
    implementation("org.springframework.cloud:spring-cloud-starter-openfeign")
    implementation("org.springframework.cloud:spring-cloud-context")
    implementation("org.springframework.boot:spring-boot-starter-aop")
    implementation("org.springframework.boot:spring-boot-starter-data-redis")
    implementation("org.springframework.boot:spring-boot-starter-cache")
    implementation("org.apache.shiro:shiro-spring:1.4.0")
    implementation("com.auth0:java-jwt:3.4.0")
    implementation("io.jsonwebtoken:jjwt:0.9.1")

    implementation("com.github.ben-manes.caffeine:caffeine:$caffeineVersion")
    implementation("redis.clients:jedis")
    implementation("com.alibaba:fastjson:1.2.60")
    implementation("commons-beanutils:commons-beanutils:1.9.4")
    
    implementation("io.springfox:springfox-swagger2:$springfoxVersion")
    implementation("io.springfox:springfox-swagger-ui:$springfoxVersion")
    implementation("io.github.openfeign:feign-okhttp")
    implementation("io.github.openfeign:feign-hystrix")

    implementation("io.netty:netty-buffer:$nettyVersion")
    implementation("io.netty:netty-codec:$nettyVersion")
    implementation("io.netty:netty-common:$nettyVersion")
    implementation("io.netty:netty-handler:$nettyVersion")
    implementation("io.netty:netty-resolver:$nettyVersion")
    implementation("io.netty:netty-transport:$nettyVersion")

    // zuul与ribbon
    implementation("org.springframework.cloud:spring-cloud-starter-netflix-zuul")
    implementation("org.springframework.cloud:spring-cloud-starter-netflix-ribbon")

//    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
//    implementation("com.alibaba:druid:$druidVersion")
//    implementation("org.apache.shardingsphere:sharding-jdbc-spring-boot-starter:$shardingJdbcVersion")
//    implementation("com.oracle:ojdbc6:11.2.0.3")
//    implementation("mysql:mysql-connector-java:5.1.41")
     //QueryDSL
//    implementation("com.querydsl:querydsl-core:${queryDslVersion}")
//    implementation("com.querydsl:querydsl-jpa:${queryDslVersion}")
    //关键地方(记得开启annotationProcessor)
//    annotationProcessor("com.querydsl:querydsl-apt:${queryDslVersion}:jpa",
//            "org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.2.Final",
//            "javax.annotation:javax.annotation-api:1.3.2")
    compileOnly("org.mapstruct:mapstruct-jdk8:1.3.0.Final")
    annotationProcessor("org.mapstruct:mapstruct-processor:1.3.0.Final")
    compileOnly("org.projectlombok:lombok:1.18.6")
    annotationProcessor("org.projectlombok:lombok:1.18.6")
    annotationProcessor("org.springframework.boot:spring-boot-configuration-processor")

    testCompile group: 'junit', name: 'junit', version: '4.12'
}


